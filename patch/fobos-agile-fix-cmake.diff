From 2e33ad41d25d45f4af155a3e7e39ac176d714305 Mon Sep 17 00:00:00 2001
From: "alexey.lysiuk" <alexey.lysiuk@gmail.com>
Date: Sat, 10 May 2025 13:03:37 +0300
Subject: [PATCH] Major update of CMake configuration

* Support Windows (MSVC and MinGW), Linux, and macOS
* `libusb` installation can be specified explicitly by defining `LIBUSB_INCLUDE_DIRS` and `LIBUSB_LIBRARIES` CMake variables
* Support the current structure of Windows `libusb` package, version 1.0.27 and newer
* Select proper `libusb` MSVC libraries for various versions of Visual Studio
* Remove duplicated and redundant command line options
* Include `libusb.h` without `libusb-1.0` directory
* `pkg-config` returns include string with this directory added
* Windows packages don't have this directory at all
* Normalize all CMake commands to lower case
* Normalize indents by using 4 spaces
* Install udev rules on Linux only
---
 CMakeLists.txt    | 206 +++++++++++++++++++++++-----------------------
 fobos/fobos_sdr.c |   3 +-
 2 files changed, 103 insertions(+), 106 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4781b3b..b936fb0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,15 +24,12 @@
 ########################################################################
 cmake_minimum_required(VERSION 3.7.2)
 
-if(${CMAKE_VERSION} VERSION_LESS "3.12.0")
-    project(fobos_sdr)
-else()
-    project(fobos_sdr C)
-endif()
+project(fobos_sdr LANGUAGES C)
+set(CMAKE_C_STANDARD 99)
+set(CMAKE_C_EXTENSIONS OFF)
 
 include(GNUInstallDirs)
 message(>>> "CMAKE_INSTALL_LIBDIR: " ${CMAKE_INSTALL_LIBDIR})
-set(CMAKE_C_FLAGS, "${CMAKE_C_FLAGS} -std=c99")
 ########################################################################
 
 ########################################################################
@@ -47,16 +44,19 @@ endif(NOT CMAKE_BUILD_TYPE)
 ########################################################################
 # Compiler specific setup
 ########################################################################
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-    ADD_DEFINITIONS(-Wall)
-    ADD_DEFINITIONS(-Wextra)
-    ADD_DEFINITIONS(-Wno-unused-parameter)
-    ADD_DEFINITIONS(-Wno-unused)
-    ADD_DEFINITIONS(-Wsign-compare)
-    ADD_DEFINITIONS(-ansi)
-elseif(MSVC14 OR MSVC14)
-    ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
-    ADD_DEFINITIONS(-D_TIMESPEC_DEFINED)
+if(MSVC)
+    add_definitions(
+        -D_CRT_SECURE_NO_WARNINGS
+        -D_TIMESPEC_DEFINED
+    )
+else()
+    add_compile_options(
+        -Wall
+        -Wextra
+        -Wno-unused-parameter
+        -Wno-unused
+        -Wsign-compare
+    )
 endif()
 ########################################################################
 
@@ -64,33 +64,62 @@ endif()
 # Find build dependencies
 ########################################################################
 find_package(PkgConfig)
-if(PKG_CONFIG_FOUND)
-    pkg_check_modules(LIBUSB libusb-1.0 IMPORTED_TARGET)
-    if(LIBUSB_LINK_LIBRARIES)
-        set(LIBUSB_LIBRARIES "${LIBUSB_LINK_LIBRARIES}")
+if(NOT DEFINED LIBUSB_INCLUDE_DIRS OR NOT DEFINED LIBUSB_LIBRARIES)
+    find_package(PkgConfig)
+    if(PKG_CONFIG_FOUND)
+        pkg_check_modules(LIBUSB libusb-1.0 IMPORTED_TARGET)
+        if(NOT LIBUSB_FOUND)
+            message(FATAL_ERROR "LibUSB 1.0 required")
+        else()
+            set(LIBUSB_LIBRARIES "${LIBUSB_LINK_LIBRARIES}")
+        endif()
+    else()
+        if(MSVC)
+            if(MSVC_VERSION EQUAL 1800)
+                set(LIBUSB_SUFFIX VS2013)
+            elseif(MSVC_VERSION EQUAL 1900)
+                set(LIBUSB_SUFFIX VS2015)
+            elseif((MSVC_VERSION GREATER_EQUAL 1910) AND (MSVC_VERSION LESS_EQUAL 1919))
+                set(LIBUSB_SUFFIX VS2017)
+            elseif((MSVC_VERSION GREATER_EQUAL 1920) AND (MSVC_VERSION LESS_EQUAL 1929))
+                set(LIBUSB_SUFFIX VS2019)
+            else()
+                set(LIBUSB_SUFFIX VS2022)
+            endif()
+
+            if(CMAKE_SIZEOF_VOID_P EQUAL 4)
+                set(LIBUSB_SUFFIX "${LIBUSB_SUFFIX}/MS32")
+            else()
+                set(LIBUSB_SUFFIX "${LIBUSB_SUFFIX}/MS64")
+            endif()
+
+            set(LIBUSB_SUFFIX "${LIBUSB_SUFFIX}/dll")
+        elseif(MINGW)
+            if(CMAKE_SIZEOF_VOID_P EQUAL 4)
+                set(LIBUSB_SUFFIX "MinGW32")
+            else()
+                set(LIBUSB_SUFFIX "MinGW64")
+            endif()
+
+            set(LIBUSB_SUFFIX "${LIBUSB_SUFFIX}/dll/libusb-1.0.dll")
+        endif()
+
+        set(LIBUSB_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/libusb/include)
+        set(LIBUSB_LIBRARIES ${CMAKE_SOURCE_DIR}/libusb/${LIBUSB_SUFFIX})
     endif()
-else()
-if (CMAKE_VS_PLATFORM_NAME STREQUAL Win32)
-	set(LIBUSB_LIBRARIES ${CMAKE_SOURCE_DIR}/libusb/MS32/dll)
-endif()
-if (CMAKE_VS_PLATFORM_NAME STREQUAL x64)
-    set(LIBUSB_LIBRARIES ${CMAKE_SOURCE_DIR}/libusb/MS64/dll)
-endif()
-    set(LIBUSB_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/libusb/include)
-endif()
-if(PKG_CONFIG_FOUND AND NOT LIBUSB_FOUND)
-    message(FATAL_ERROR "LibUSB 1.0 required")
 endif()
 ########################################################################
 
 ########################################################################
 # Install udev rules
 ########################################################################
-install(
-    FILES fobos-sdr.rules
-    DESTINATION "/etc/udev/rules.d"
-    COMPONENT "udev"
+if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
+    install(
+        FILES fobos-sdr.rules
+        DESTINATION "/etc/udev/rules.d"
+        COMPONENT "udev"
     )
+endif()
 ########################################################################
 
 ########################################################################
@@ -108,36 +137,38 @@ message(>>> "PROJECT_BINARY_DIR: " ${PROJECT_BINARY_DIR})
 ########################################################################
 add_library(libfobos_sdr SHARED fobos/fobos_sdr.c)
 
-target_compile_options(libfobos_sdr PUBLIC -std=c99)
-
 if(MSVC)
-target_compile_options(libfobos_sdr PUBLIC "/MT")
-ADD_CUSTOM_COMMAND(TARGET libfobos_sdr
-          POST_BUILD
+    target_compile_options(libfobos_sdr PUBLIC "/MT")
+    add_custom_command(TARGET libfobos_sdr
+        POST_BUILD
         COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/Debug
-          COMMAND ${CMAKE_COMMAND} -E copy ${LIBUSB_LIBRARIES}/libusb-1.0.dll ${PROJECT_BINARY_DIR}/Debug
-)
-ADD_CUSTOM_COMMAND(TARGET libfobos_sdr
-          POST_BUILD
-          COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/Release
-          COMMAND ${CMAKE_COMMAND} -E copy ${LIBUSB_LIBRARIES}/libusb-1.0.dll ${PROJECT_BINARY_DIR}/Release
+        COMMAND ${CMAKE_COMMAND} -E copy ${LIBUSB_LIBRARIES}/libusb-1.0.dll ${PROJECT_BINARY_DIR}/Debug
+    )
+    add_custom_command(TARGET libfobos_sdr
+        POST_BUILD
+        COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/Release
+        COMMAND ${CMAKE_COMMAND} -E copy ${LIBUSB_LIBRARIES}/libusb-1.0.dll ${PROJECT_BINARY_DIR}/Release
 )
-else()
+elseif(MINGW)
+    add_custom_command(TARGET libfobos_sdr
+        POST_BUILD
+        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${LIBUSB_LIBRARIES} ${PROJECT_BINARY_DIR}/msys-usb-1.0.dll
+    )
 endif()
 
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-    target_link_libraries(libfobos_sdr PRIVATE ${LIBUSB_LIBRARIES})
-else()
+if(MSVC)
     target_link_directories(libfobos_sdr PRIVATE ${LIBUSB_LIBRARIES})
+else()
+    target_link_libraries(libfobos_sdr PRIVATE ${LIBUSB_LIBRARIES})
 endif()
 
 target_include_directories(libfobos_sdr PUBLIC
-  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
-  $<INSTALL_INTERFACE:${CMAKE_SOURCE_DIR}>
-  $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>/fobos
-  ${LIBUSB_INCLUDE_DIRS}
-  )
-  
+    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
+    $<INSTALL_INTERFACE:${CMAKE_SOURCE_DIR}>
+    $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>/fobos
+    ${LIBUSB_INCLUDE_DIRS}
+)
+
 set_target_properties(libfobos_sdr PROPERTIES DEFINE_SYMBOL "FOBOS_SDR_EXPORTS")
 set_target_properties(libfobos_sdr PROPERTIES OUTPUT_NAME fobos_sdr)
 ########################################################################
@@ -145,7 +176,7 @@ set_target_properties(libfobos_sdr PROPERTIES OUTPUT_NAME fobos_sdr)
 ########################################################################
 # Install public header files
 ########################################################################
-INSTALL(
+install(
     FILES fobos/fobos_sdr.h
     DESTINATION include
 )
@@ -154,38 +185,39 @@ INSTALL(
 ########################################################################
 # Install built library files & utilities
 ########################################################################
-INSTALL(
+install(
     TARGETS libfobos_sdr
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-) 
+)
 ########################################################################
 
 ########################################################################
 # Create Pkg Config File
 ########################################################################
-FOREACH(inc ${LIBUSB_INCLUDEDIR})
-    LIST(APPEND LIBFOBOS_SDR_PC_CFLAGS "-I${inc}")
-ENDFOREACH(inc)
+foreach(inc ${LIBUSB_INCLUDEDIR})
+    list(APPEND LIBFOBOS_SDR_PC_CFLAGS "-I${inc}")
+endforeach(inc)
 
-FOREACH(lib ${LIBUSB_LIBRARY_DIRS})
-    LIST(APPEND LIBFOBOS_SDR_PC_LIBS "-L${lib}")
-ENDFOREACH(lib)
+foreach(lib ${LIBUSB_LIBRARY_DIRS})
+    list(APPEND LIBFOBOS_SDR_PC_LIBS "-L${lib}")
+endforeach(lib)
 
 # use space-separation format for the pc file
-STRING(REPLACE ";" " " LIBFOBOS_SDR_PC_CFLAGS "${LIBFOBOS_SDR_PC_CFLAGS}")
-STRING(REPLACE ";" " " LIBFOBOS_SDR_PC_LIBS "${LIBFOBOS_SDR_PC_LIBS}")
+string(REPLACE ";" " " LIBFOBOS_SDR_PC_CFLAGS "${LIBFOBOS_SDR_PC_CFLAGS}")
+string(REPLACE ";" " " LIBFOBOS_SDR_PC_LIBS "${LIBFOBOS_SDR_PC_LIBS}")
 
 set(prefix "${CMAKE_INSTALL_PREFIX}")
 set(exec_prefix \${prefix})
 set(includedir \${prefix}/include)
 set(libdir \${exec_prefix}/lib)
 
-CONFIGURE_FILE(
+configure_file(
     ${CMAKE_CURRENT_SOURCE_DIR}/libfobos_sdr.pc.in
     ${CMAKE_CURRENT_BINARY_DIR}/libfobos_sdr.pc
-@ONLY)
+    @ONLY
+)
 
-INSTALL(
+install(
     FILES ${CMAKE_CURRENT_BINARY_DIR}/libfobos_sdr.pc
     DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
 )
@@ -210,18 +242,8 @@ add_custom_target(uninstall
 add_executable(fobos_sdr_devinfo
     eval/fobos_sdr_devinfo_main.c)
 
-target_compile_options(fobos_sdr_devinfo PUBLIC -std=c99)
-
 target_link_libraries(fobos_sdr_devinfo PRIVATE libfobos_sdr)
 
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-	target_link_libraries(fobos_sdr_devinfo PRIVATE ${LIBUSB_LIBRARIES})
-else()
-	target_link_directories(fobos_sdr_devinfo PRIVATE ${LIBUSB_LIBRARIES})
-endif()
-
-target_include_directories(fobos_sdr_devinfo PRIVATE ${CMAKE_SOURCE_DIR})
-
 target_include_directories(fobos_sdr_devinfo PRIVATE ${CMAKE_SOURCE_DIR}/fobos)
 ########################################################################
 
@@ -232,16 +254,8 @@ add_executable(fobos_sdr_recorder
     eval/fobos_sdr_recorder_main.c 
     wav/wav_file.c)
 
-target_compile_options(fobos_sdr_recorder PUBLIC -std=c99)
-
 target_link_libraries(fobos_sdr_recorder PRIVATE libfobos_sdr)
 
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-    target_link_libraries(fobos_sdr_recorder PRIVATE ${LIBUSB_LIBRARIES})
-else()
-    target_link_directories(fobos_sdr_recorder PRIVATE ${LIBUSB_LIBRARIES})
-endif()
-
 target_include_directories(fobos_sdr_recorder PRIVATE ${CMAKE_SOURCE_DIR})
 
 target_include_directories(fobos_sdr_recorder PRIVATE ${CMAKE_SOURCE_DIR}/fobos)
@@ -254,16 +268,8 @@ add_executable(fobos_sdr_scanner
     eval/fobos_sdr_scanner_main.c 
     wav/wav_file.c)
 
-target_compile_options(fobos_sdr_scanner PUBLIC -std=c99)
-
 target_link_libraries(fobos_sdr_scanner PRIVATE libfobos_sdr)
 
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-    target_link_libraries(fobos_sdr_scanner PRIVATE ${LIBUSB_LIBRARIES})
-else()
-    target_link_directories(fobos_sdr_scanner PRIVATE ${LIBUSB_LIBRARIES})
-endif()
-
 target_include_directories(fobos_sdr_scanner PRIVATE ${CMAKE_SOURCE_DIR})
 
 target_include_directories(fobos_sdr_scanner PRIVATE ${CMAKE_SOURCE_DIR}/fobos)
@@ -276,16 +282,8 @@ add_executable(fobos_sdr_fwloader
     eval/fobos_sdr_fwloader_main.c 
     wav/wav_file.c)
 
-target_compile_options(fobos_sdr_fwloader PUBLIC -std=c99)
-
 target_link_libraries(fobos_sdr_fwloader PRIVATE libfobos_sdr)
 
-if(CMAKE_COMPILER_IS_GNUCC AND NOT WIN32)
-    target_link_libraries(fobos_sdr_fwloader PRIVATE ${LIBUSB_LIBRARIES})
-else()
-    target_link_directories(fobos_sdr_fwloader PRIVATE ${LIBUSB_LIBRARIES})
-endif()
-
 target_include_directories(fobos_sdr_fwloader PRIVATE ${CMAKE_SOURCE_DIR})
 
 target_include_directories(fobos_sdr_fwloader PRIVATE ${CMAKE_SOURCE_DIR}/fobos)
diff --git a/fobos/fobos_sdr.c b/fobos/fobos_sdr.c
index 21e8b84..c9cd8cf 100644
--- a/fobos/fobos_sdr.c
+++ b/fobos/fobos_sdr.c
@@ -16,14 +16,13 @@
 #include <string.h>
 #include <stdlib.h>
 #include "fobos_sdr.h"
+#include <libusb.h>
 #ifdef _WIN32
-#include <libusb-1.0/libusb.h>
 #include <conio.h>
 #include <Windows.h>
 #pragma comment(lib, "libusb-1.0.lib")                                             
 #define printf_internal _cprintf
 #else
-#include <libusb-1.0/libusb.h>
 #include <unistd.h>
 #endif
 #ifndef printf_internal
-- 
2.39.5 (Apple Git-154)

